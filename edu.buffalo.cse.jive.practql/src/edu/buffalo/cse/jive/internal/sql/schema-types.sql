/** 
 * ************************************************************
 *  NON-TEMPORAL: VALUE MODEL SECTION                    
 * ************************************************************
 */

CREATE TYPE ValueKind AS ENUM (
    'IM_CONTOUR_REFERENCE',
    'IM_METHOD_CONTOUR_REFERENCE',
    'IM_PRIMITIVE',
    'NULL',
    'OUT_OF_MODEL',
    'OM_METHOD_KEY_REFERENCE',
    'OM_METHOD_REFERENCE',
    'OM_RESOLVED',
    'SYSTEM_CALLER',
    'UNINITIALIZED'
);
COMMENT ON TYPE ValueKind IS 'Kinds associated with values in the model. Each kind has a different representation and/or interpretation.';

/** 
 * ************************************************************
 *  NON-TEMPORAL: NODE MODEL SECTION                    
 * ************************************************************
 */

CREATE TYPE NodeKind AS ENUM (
    'NK_ARRAY',
    'NK_CLASS',
    'NK_ENUM',
    'NK_FIELD',
    'NK_FILE',
    'NK_INTERFACE',
    'NK_METHOD',
    'NK_PRIMITIVE',
    'NK_ROOT',
    'NK_VARIABLE'
);
COMMENT ON TYPE NodeKind IS 'Kinds of static nodes created by Jive at run-time.';

CREATE TYPE NodeModifier AS ENUM (
    -- classes, methods
   'NM_ABSTRACT',
    -- classes
   'NM_ANONYMOUS',
    -- variables
   'NM_ARGUMENT',
    -- methods
   'NM_BRIDGE',
    -- variables
   'NM_CATCH_VARIABLE',
    -- fields
   'NM_COMPILE_TIME_FINAL',
    -- methods
   'NM_CONSTRUCTOR',
    -- fields
   'NM_ENUM_CONSTANT',
    -- methods
   'NM_FIELD_INITIALIZER',
    -- classes, methods, fields, variables
   'NM_FINAL',
    -- classes
   'NM_LOCAL',
    -- methods
   'NM_NATIVE',
    -- JIVE variable
   'NM_RESULT',
    -- JIVE variable
   'NM_RPDL',
    -- classes, methods, fields
   'NM_STATIC',
    -- methods, blocks
   'NM_SYNCHRONIZED',
    -- methods, fields
   'NM_SYNTHETIC',
    -- fields
   'NM_TRANSIENT',
    -- methods
   'NM_TYPE_INITIALIZER',
    -- fields
   'NM_VOLATILE'
);
COMMENT ON TYPE NodeModifier IS 'Modifiers of the nodes created by Jive at run-time. Modifiers are used in the dynamic analysis and also for UI rendering.';

CREATE TYPE NodeOrigin AS ENUM (
    -- obtained from AST
    'NO_AST',
    -- obtained from JDI
    'NO_JDI',
    -- generated by Jive
    'NO_JIVE',
    -- inferred as out-of-model (place holder node)
    'NO_OUT_OF_MODEL'
);
COMMENT ON TYPE NodeOrigin IS 'Origin of the nodes created by Jive at run-time.';

CREATE TYPE NodeVisibility AS ENUM (
    'NV_LOCAL',
    'NV_PACKAGE',
    'NV_PRIVATE',
    'NV_PROTECTED',
    'NV_PUBLIC'
);
COMMENT ON TYPE NodeVisibility IS 'Visibility scope associated with the nodes created by Jive at run-time.';

/** 
 * ************************************************************
 *  NON-TEMPORAL: DEPENDENCE GRAPH MODEL SECTION               
 * ************************************************************
 */

CREATE TYPE LineKind AS ENUM (
    'LK_ASSIGNMENT',
    'LK_ASSIGNMENT_ARRAY_CELL',
    'LK_BREAK',
    'LK_CATCH',
    'LK_CLASS_INSTANCE_CREATION',
    'LK_CONSTRUCTOR_INVOCATION',
    'LK_CONDITIONAL',
    'LK_CONTINUE',
    'LK_DO',
    'LK_ENHANCED_FOR',
    'LK_FIELD_DECLARATION',
    'LK_FOR',
    'LK_IF_THEN',
    'LK_IF_THEN_ELSE',
    'LK_INITIALIZER',
    'LK_METHOD_DECLARATION',
    'LK_METHOD_CALL',
    'LK_POSTFIX',
    'LK_POSTFIX_ARRAY_CELL',
    'LK_PREFIX',
    'LK_PREFIX_ARRAY_CELL',
    'LK_RETURN',
    'LK_SUPER_CONSTRUCTOR',
    'LK_SUPER_METHOD_CALL',
    'LK_SWITCH',
    'LK_SYNCHRONIZED',
    'LK_THROW',
    'LK_VARIABLE_DECLARATION',
    'LK_WHILE'
);
COMMENT ON TYPE LineKind IS 'Kinds of line generated by Jive during the AST analysis.';

/** 
 * ************************************************************
 *  TEMPORAL: CONTOUR MODEL SECTION                   
 * ************************************************************
 */

CREATE TYPE ContourKind AS ENUM (
    'CK_INSTANCE',
    'CK_INSTANCE_VIRTUAL',
    'CK_METHOD',
    'CK_STATIC'
);
COMMENT ON TYPE ContourKind IS 'Kinds of contours created by Jive at run-time.';

/** 
 * ************************************************************
 *  TEMPORAL: EVENT MODEL SECTION                    
 * ************************************************************
 */

CREATE TYPE EventKind AS ENUM (
    'EXCEPTION_CATCH',
    'EXCEPTION_THROW',
    'FIELD_READ',
    'FIELD_WRITE',
    'LINE_STEP',
    'THREAD_LOCK',
    'METHOD_CALL',
    'METHOD_ENTERED',
    'METHOD_EXIT',
    'METHOD_RETURNED',
    'NEW_OBJECT',
    'SYSTEM_END',
    'SYSTEM_START',
    'THREAD_END',
    'THREAD_START',
    'TYPE_LOAD',
    'VAR_ASSIGN',
    'VAR_DELETE'
);
COMMENT ON TYPE EventKind IS 'Trace events generated by Jive at run-time.';